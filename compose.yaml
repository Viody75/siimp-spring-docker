#version: "3.8"
#
#services:
#  db_service:
#    image: postgres:16
#    container_name: siimp-postgres
#    restart: always
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB}
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#    ports:
#      - "5432:5432"
#    volumes:
#      - pgdata:/var/lib/postgresql/data
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#
#  springboot:
#    build: .
#    container_name: siimp-app
#    restart: always
#    depends_on:
#      db_service:
#        condition: service_healthy
#    ports:
#      - "8080:8080"
#    env_file:
#      - .env
#    environment:
#      # Can be used like the env VAR
#      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
#      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
#      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
#      SPRING_JPA_HIBERNATE_DDL_AUTO: update
#
#
#volumes:
#  pgdata:

version: "3.8"

services:
  db_service:
    image: postgres:16
    container_name: siimp-postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  springboot:
    build: .
    container_name: siimp-app
    restart: always
    depends_on:
      db_service:
        condition: service_healthy
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  pgdata:
  grafana-storage:

